{{- $component := "web" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kbase.fullname" . }}-{{ $component }}
  labels:
    {{- include "kbase.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.web.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/component: {{ $component }}
      {{- include "kbase.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.web.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/component: {{ $component }}
        {{- include "kbase.labels" . | nindent 8 }}
        {{- with .Values.web.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.web.podSecurityContext | nindent 8 }}
      initContainers:
        - name: copy-static
          image: "{{ .Values.web.django.image.repository }}:{{ .Values.web.django.image.tag | default .Chart.AppVersion }}"
          command: ["/bin/bash", "-c", "cp -pr static/* /static"]
          volumeMounts:
            - name: static
              mountPath: /static
      containers:
        - name: {{ .Chart.Name }}-django
          securityContext:
            {{- toYaml .Values.web.django.securityContext | nindent 12 }}
          image: "{{ .Values.web.django.image.repository }}:{{ .Values.web.django.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.web.django.image.pullPolicy }}
          {{- with .Values.web.django.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
            - secretRef:
                name: {{ .Release.Name }}-db-secret
            - secretRef:
                name: {{ .Release.Name }}-django-secret
            - configMapRef:
                name: {{ .Release.Name }}-django-config
          {{- with .Values.web.django.envFrom}}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: gunicorn
              containerPort: 8000
              protocol: TCP
{{/*          livenessProbe:*/}}
{{/*            httpGet:*/}}
{{/*              path: /*/}}
{{/*              port: 8000*/}}
{{/*          readinessProbe:*/}}
{{/*            httpGet:*/}}
{{/*              path: /*/}}
{{/*              port: 8000*/}}
{{/*            failureThreshold: 5*/}}
{{/*            periodSeconds: 20*/}}
          resources:
            {{- toYaml .Values.web.django.resources | nindent 12 }}
          volumeMounts:
            - name: static
              mountPath: /var/opt/kbase/static
        - name: {{ .Chart.Name }}-nginx
          securityContext:
            {{- toYaml .Values.web.nginx.securityContext | nindent 12 }}
          image: "nginx:{{ .Values.web.nginx.image.tag }}"
          imagePullPolicy: {{ .Values.web.nginx.image.pullPolicy }}
          {{- with .Values.web.nginx.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.web.nginx.envFrom}}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
          resources:
            {{- toYaml .Values.web.nginx.resources | nindent 12 }}
          volumeMounts:
            - name: static
              mountPath: /usr/share/nginx/html/static
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/
      volumes:
        - name: static
          emptyDir: {}
        - name: nginx-conf
          configMap:
            name: {{ .Release.Name }}-nginx-config
