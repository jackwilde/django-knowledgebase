name: Update Docker image

on:
  workflow_dispatch: {}
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'docker/django/**'

env:
  GH_TOKEN: "${{ secrets.GH_TOKEN }}"
  IMAGE_NAME: kbase

jobs:
  update-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: "${{ secrets.GH_TOKEN }}"
      - name: Login to ghcr
        run: |
          echo "$GH_TOKEN" | docker login ghcr.io -u $ --password-stdin
          echo "$GH_TOKEN" | skopeo login ghcr.io --username $ --password-stdin
      - name: Set image version
        id: version
        run: |
          # Get version from source
          current_version=$(cat VERSION)
          current_major=$(cut -d '.' -f1-2 <<< "$current_version")
          current_patch=$(cut -d '.' -f3 <<< "$current_version")
          
          # Get details about last release
          last_version=$(skopeo list-tags docker://ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }} | jq -r '[.Tags[] | select(. != "latest")] | sort | .[-1]')
          last_major=$(cut -d '.' -f1-2 <<< "$last_version")
          
          if [[ $current_major == "$last_major" ]]; then
            # Increment the patch version
            new_patch=$((++current_patch))
            latest_version="${last_major}.${new_patch}"
          else
            # Reset the patch version to 1
            latest_version="${current_major}.1"
          fi
          
          echo "VERSION=$latest_version" >> $GITHUB_ENV
      - name: Build image
        run: |
          image_version=${{ steps.base-version.outputs.latest_version }}
          echo "ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}"
          docker build -t "ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}" -f docker/django/Dockerfile .
          docker tag "ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}" "ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest"

      - name: Push image
        run: docker push -a "ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}"

      - name: Update VERSION
        run: echo "${{ env.VERSION }}" | tee VERSION

      - name: Commit Changes
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@users.noreply.github.com'
          git add VERSION
          git commit -m "Update VERSION"
          git push