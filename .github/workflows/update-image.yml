name: Update Docker image

on:
  workflow_dispatch: {}
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'docker/django/**'
      - '.github/workflows/update-image.yml'


env:
  GH_TOKEN: ${{ github.token }}
  IMAGE_NAME: kbase

jobs:
  update-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Login to ghcr
        run: |
          echo "$GH_TOKEN" | docker login ghcr.io -u $ --password-stdin
          echo "$GH_TOKEN" | skopeo login ghcr.io --username $ --password-stdin
      - name: Set image version
        id: version
        run: |
          # Get version from source
          version=$(cat VERSION)
          
          # Get details about last release
          last_version=$(skopeo list-tags docker://ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }} | jq -r '[.Tags[] | select(. != "latest")] | sort | .[-1]')
          
          if [[ -z $last_version ]]; then
            latest_version="${version}.1"
          else
            major_version=$(cut -d '.' -f1-2 <<< $last_version)
            patch_version=$(cut -d '.' -f3 <<< $last_version)
            if [[ $version == $major_version ]]; then
              ((++patch_version))
              latest_version="${major_version}.${patch_version}"
            else
              latest_version="${version}.1"
            fi
          fi
          
          echo "VERSION=$latest_version" >> $GITHUB_ENV
      - name: Build image
        run: |
          image_version=${{ steps.base-version.outputs.latest_version }}
          echo "ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}"
          docker build -t "ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}" -f docker/django/Dockerfile .
          docker tag "ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}" "ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest"

      - name: Push image
        run: docker push -a "ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}"